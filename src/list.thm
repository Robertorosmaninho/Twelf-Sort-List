%
% After in_ord inserts an element into a sorted list, the list remains sorted.
%
inv_sort_thm : sorted L -> in_ord L E L' -> sorted L' -> type.
%mode inv_sort_thm +D1 +D2 -D3.

inv_sort_thm_nil : inv_sort_thm sorted_nil in_ord_nil sorted_one.
inv_sort_thm_one_leq : inv_sort_thm sorted_one (in_ord_leq C1) (sorted_con sorted_one C1).
inv_sort_thm_one_leq_C1 : inv_sort_thm sorted_one (in_ord_leq (LEQ: leq C1 _)) (sorted_con sorted_one LEQ).
in_sort_thm_con_leq : inv_sort_thm (sorted_con L' LQ'') (in_ord_leq LQ) (sorted_con L'' LQ) <- inv_sort_thm L'(in_ord_leq LQ'') L''.


%worlds () (inv_sort_thm _ _ _).
%total D (inv_sort_thm D _ _).

%
% 'sort' sorts a list.
%
sort_thm : sort L L' -> sorted L' -> type.
%mode sort_thm +SORT -SORTED.

sort_thm_nil : sort_thm sort_nil sorted_nil.


%worlds () (sort_thm _ _).
%total D (sort_thm D _).
